name: Workflow for deploying an AKS or EKS and install helm charts to those K8s cluster

on:
  workflow_dispatch:
    inputs:
      INFRASTRUCTURE_OPERATIONS:
        type: choice
        options: [ 'storage-account-backend-deploy', 'k8s-service-deploy', 'k8s-service-destroy', 'helm-charts-install', 'helm-charts-uninstall' ]
        default: k8s-service-deploy
        description: 'Infrastructure operations: [ storage-account-backend-deploy, k8s-service-deploy, k8s-service-destroy, helm-charts-install, helm-charts-uninstall ]'
      ENVIRONMENT:
        type: choice
        options: [ 'sbx' ]
        default: sbx
        description: 'Environment on which to deploy: [ sbx ]. Dev, staging, prod environments not considered'
env:
  ARM_SUBSCRIPTION_ID: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
  ARM_TENANT_ID: '${{ secrets.ARM_TENANT_ID }}'
  ARM_CLIENT_ID: '${{ secrets.ARM_CLIENT_ID }}'
  ARM_CLIENT_SECRET: '${{ secrets.ARM_CLIENT_SECRET }}'

jobs:
  deploy-tf-backend:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'storage-account-backend-deploy' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  
      - name: Terraform Init
        id: init
        run: terraform init # should be only deployed once. Ensure to manually destroy the ACR in the Azure Portal Web UI
        working-directory: ./devops/terraform
      - name: Deploy Storage Account backend
        id: apply
        run: terraform apply --auto-approve
        continue-on-error: false
        working-directory: ./devops/terraform
  tf-k8s-service-services-operations:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'k8s-service-deploy' || github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'k8s-service-destroy' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  
      - name: Terraform Init # requires a Storage Account backend deployed trough storage-account-backend-deploy workflow step
        id: init
        run: |
          terraform init \
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=gftfbesbxsa001" \
          -backend-config="resource_group_name=gftfbe-sbx-rg001" \
          -backend-config="container_name=gftfbesbxsac001" \
          -backend-config="key=sbx-k8s-service-deployment/terraform.tfstate"
        working-directory: ./envs/${{ github.event.inputs.ENVIRONMENT }}-k8s-service-deployment
      - name: Deploy Kubernetes service and related resources
        id: apply
        run: terraform apply --auto-approve
        continue-on-error: false
        working-directory: ./envs/${{ github.event.inputs.ENVIRONMENT }}-k8s-service-deployment
        if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'k8s-service-deploy' }}
      - name: Uninstall helm charts
        id: destroy
        run: terraform destroy --auto-approve
        continue-on-error: false
        working-directory: ./envs/${{ github.event.inputs.ENVIRONMENT }}-k8s-service-configuration
        if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'k8s-service-destroy' }}
      - name: Destroy Kubernetes service and related resources
        id: destroy
        run: terraform destroy --auto-approve
        continue-on-error: false
        working-directory: ./envs/${{ github.event.inputs.ENVIRONMENT }}-k8s-service-deployment
        if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'k8s-service-destroy' }}
  tf-helm-charts-operations:
    runs-on: ubuntu-latest
    needs: tf-k8s-service-services-operations
    if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'k8s-service-deploy' || github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'helm-charts-install' || github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'helm-charts-uninstall' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  
      - name: Terraform Init # requires a Storage Account backend deployed trough storage-account-backend-deploy workflow step
        id: init
        run: |
          terraform init \ 
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=gftfbesbxsa001" \
          -backend-config="resource_group_name=gftfbe-sbx-rg001" \
          -backend-config="container_name=gftfbesbxsac001" \
          -backend-config="key=sbx-k8s-service-configuration/terraform.tfstate"
        working-directory: ./envs/${{ github.event.inputs.ENVIRONMENT }}-k8s-service-configuration
      - name: Install helm charts
        id: apply
        run: terraform apply --auto-approve
        continue-on-error: false
        working-directory: ./envs/${{ github.event.inputs.ENVIRONMENT }}-k8s-service-configuration
        env:
          TF_VAR_acr_username: ${{ secrets.ACR_USR }} 
          TF_VAR_acr_password: ${{ secrets.ACR_PWD }}
          TF_VAR_acr_login_server_name: ${{ secrets.ACR_LOGIN_SERVER_NAME }}
        if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'helm-charts-install' }}
      - name: Uninstall helm charts
        id: destroy
        run: terraform destroy --auto-approve
        continue-on-error: false
        working-directory: ./envs/${{ github.event.inputs.ENVIRONMENT }}-k8s-service-configuration
        if: ${{ github.event.inputs.INFRASTRUCTURE_OPERATIONS == 'helm-charts-uninstall' }}